name: Release Check (PR smoke)
env:
  RUN_SMOKE: 'false'  # flip to 'true' when ready
on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions: { contents: read }
jobs:
  pr:
    name: pr
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable pnpm (corepack)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm --version

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Typecheck (best-effort)
        run: pnpm run -s typecheck || echo "::warning::no typecheck script"

      - name: Lint (RSC guard)
        run: pnpm lint

      - name: Build
        env:
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:3000/api/mock
          NEXT_PUBLIC_SUPABASE_ANON_KEY: stub
          NEXT_PUBLIC_APP_ORIGIN: http://localhost:3000
          SUPABASE_SERVICE_ROLE: stub_service_role
          SEED_ADMIN_EMAIL: ci-admin@example.test
          SEED_ADMIN_PASSWORD: Passw0rd1!
        run: pnpm run -s build

      - name: Start app (background, tee logs)
        if: env.RUN_SMOKE == 'true'
        run: pnpm run start &> .next-server.log &

      - name: Wait for /api/health or homepage (60s)
        if: env.RUN_SMOKE == 'true'
        run: |
          for i in $(seq 1 60); do
            curl -sf http://localhost:3000/api/health && exit 0
            curl -sf http://localhost:3000/ && exit 0
            sleep 1
          done
          echo "::error::App didn't respond in time"; cat .next-server.log; exit 1

      - name: Install Playwright deps
        if: env.RUN_SMOKE == 'true'
        run: pnpm exec playwright install --with-deps

      - name: Smoke tests
        if: env.RUN_SMOKE == 'true'
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000
        run: pnpm exec playwright test tests/smoke.applications.spec.ts --reporter=line --workers=1

      - name: Stop app
        if: env.RUN_SMOKE == 'true' || always()
        run: |
          pkill -f "node .*next" || true

      - name: Upload Next server log
        if: env.RUN_SMOKE == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: next-server-log
          path: .next-server.log
          if-no-files-found: ignore
