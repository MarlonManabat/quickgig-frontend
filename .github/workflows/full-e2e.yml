name: Full E2E

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Optional external BASE_URL; empty = run locally"
        required: false
        default: ""
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: full-e2e-${{ github.ref }}
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      # Existing app envs (NO NEW NAMES)
      NEXT_PUBLIC_APP_ORIGIN: ${{ secrets.NEXT_PUBLIC_APP_ORIGIN }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      NODE_ENV: production
      PORT: 3000
      LOCAL_BASE_URL: http://localhost:3000

      # Optional E2E overrides (safe fallbacks if absent)
      E2E_EMPLOYER_EMAIL: ${{ secrets.E2E_EMPLOYER_EMAIL }}
      E2E_EMPLOYER_PASSWORD: ${{ secrets.E2E_EMPLOYER_PASSWORD }}
      E2E_WORKER_EMAIL: ${{ secrets.E2E_WORKER_EMAIL }}
      E2E_WORKER_PASSWORD: ${{ secrets.E2E_WORKER_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install pnpm FIRST so Node's pnpm cache can resolve properly
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      # Install deps even if no pnpm-lock.yaml exists (handle both cases)
      - name: Install deps
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "Found pnpm-lock.yaml -> using frozen lockfile"
            pnpm install --frozen-lockfile
          else
            echo "No pnpm-lock.yaml -> installing without lockfile"
            pnpm install --no-frozen-lockfile
          fi

      # Ensure Playwright binary + browsers are available
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      # Build the app
      - name: Build
        run: pnpm run build

      # Start Next.js locally in background (for local runs)
      - name: Start app (background)
        run: |
          pnpm start > .next-app.log 2>&1 &
          echo $! > .next-app.pid
        if: ${{ inputs.base_url == '' }}

      # Decide BASE_URL (external if provided, otherwise local)
      - name: Resolve BASE_URL
        id: base
        run: |
          if [ -n "${{ inputs.base_url }}" ]; then
            echo "base_url=${{ inputs.base_url }}" >> $GITHUB_OUTPUT
          else
            echo "base_url=${LOCAL_BASE_URL}" >> $GITHUB_OUTPUT
          fi

      # Wait for local server if running locally
      - name: Wait for local app
        run: npx wait-on ${{ steps.base.outputs.base_url }}
        if: ${{ inputs.base_url == '' }}

      # Seed test users/data via our seed API (no-op if already present)
      - name: Seed test data
        run: curl -fsS -X POST "${{ steps.base.outputs.base_url }}/api/e2e/seed"

      # Run the full e2e tests against BASE_URL
      - name: Run Full E2E
        env:
          BASE_URL: ${{ steps.base.outputs.base_url }}
        run: pnpm run test:e2e

      # Always try to upload Playwright report and server logs
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report
            test-results
          if-no-files-found: warn

      - name: Upload Next server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-app.log
          path: .next-app.log
          if-no-files-found: warn

      # Cleanup data after tests (regardless of pass/fail)
      - name: Cleanup test data
        if: always()
        run: curl -fsS -X POST "${{ steps.base.outputs.base_url }}/api/e2e/cleanup" || true

      # Stop the background app if we started it
      - name: Stop app
        if: always() && inputs.base_url == ''
        run: |
          if [ -f .next-app.pid ]; then
            kill -9 $(cat .next-app.pid) || true
          fi
