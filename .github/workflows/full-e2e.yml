name: Full E2E

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Optional external BASE_URL; empty => run locally"
        required: false
        default: ""
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: full-e2e-${{ github.ref }}
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      NODE_ENV: production
      PORT: 3000
      LOCAL_BASE_URL: http://localhost:3000

      # existing app envs
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      # optional e2e secrets
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      E2E_KEY: ${{ secrets.E2E_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install deps (ci)
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build
        run: npm run build

      - name: Start app (background)
        run: |
          npm run start > .next-app.log 2>&1 &
          echo $! > app.pid

      - name: Wait for app to be ready
        run: |
          for i in {1..90}; do
            curl -fsS ${LOCAL_BASE_URL}/api/health || curl -fsS ${LOCAL_BASE_URL} && exit 0
            sleep 2
          done
          echo "App did not become ready" >&2
          exit 1

      - name: Seed test data (best-effort)
        run: |
          if [ -n "${E2E_KEY}" ]; then
            curl -fsS "${LOCAL_BASE_URL}/api/e2e/seed?key=${E2E_KEY}" || true
          fi

      - name: Determine BASE_URL for tests
        id: base
        run: |
          if [ -n "${{ github.event.inputs.base_url }}" ]; then
            echo "url=${{ github.event.inputs.base_url }}" >> $GITHUB_OUTPUT
          else
            echo "url=${LOCAL_BASE_URL}" >> $GITHUB_OUTPUT
          fi

      - name: Run Full E2E
        env:
          BASE_URL: ${{ steps.base.outputs.url }}
        run: npx playwright test --reporter=line

      - name: Cleanup test data (best-effort)
        if: always()
        run: |
          if [ -n "${E2E_KEY}" ]; then
            curl -fsS "${LOCAL_BASE_URL}/api/e2e/cleanup?key=${E2E_KEY}" || true
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload Next server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: .next-app.log
          path: .next-app.log
          if-no-files-found: ignore
