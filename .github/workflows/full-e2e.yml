name: Full E2E

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Optional external BASE_URL; empty => run locally"
        required: false
        default: ""
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: full-e2e-${{ github.ref }}
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      NODE_ENV: production
      PORT: 3000
      LOCAL_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_APP_ORIGIN: ${{ secrets.NEXT_PUBLIC_APP_ORIGIN }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm install --no-audit --no-fund

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build
        run: npm run build

      - name: Start app (background)
        run: |
          npm run start &
          echo $! > .next-app.pid

      - name: Resolve BASE_URL
        id: base
        run: |
          if [ -n "${{ github.event.inputs.base_url }}" ]; then
            echo "url=${{ github.event.inputs.base_url }}" >> $GITHUB_OUTPUT
          else
            echo "url=${LOCAL_BASE_URL}" >> $GITHUB_OUTPUT
          fi

      - name: Wait for app to be ready
        run: |
          # Polls the App Router health endpoint (/api/health). Must return { ok: true }.
          for i in {1..60}; do
            if curl -sf "${{ steps.base.outputs.url }}/api/health" >/dev/null; then
              echo "App is ready"; exit 0
            fi
            echo "Waiting... ($i)"; sleep 2
          done
          echo "App failed to become ready"; exit 1

      # (Optionally) seed/cleanup here if endpoints already exist

      - name: Run Full E2E
        env:
          BASE_URL: ${{ steps.base.outputs.url }}
        run: npx playwright test || true

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn

      - name: Upload Next server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-app.log
          path: .next-app.log
          if-no-files-found: warn

      - name: Post cleanup
        if: always()
        run: |
          if [ -f .next-app.pid ]; then kill $(cat .next-app.pid) || true; fi
