name: Full E2E

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: Optional external BASE_URL; empty ⇒ run locally
        required: false
        default: ""
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

concurrency:
  group: full-e2e-${{ github.ref }}
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      PORT: 3000
      LOCAL_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SUPABASE_URL: http://example.com
      NEXT_PUBLIC_SUPABASE_ANON_KEY: anon
      NEXT_PUBLIC_APP_ORIGIN: http://localhost:3000
      SUPABASE_SERVICE_ROLE: stub_service_role
      SEED_ADMIN_EMAIL: ci-admin@example.test
      SEED_ADMIN_PASSWORD: Passw0rd!ci
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20 (cache npm)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # Deterministic when lockfile is in sync; else fall back to install
      - name: Install deps (include dev)
        run: |
          npm ci --include=dev || npm install --no-audit --no-fund
        env:
          NODE_ENV: development

      - name: Install Playwright browsers
        run: npx playwright install --with-deps || true

      - name: Preflight & typecheck
        run: node scripts/verify-next-config.mjs && npm run ci:verify && npm run typecheck

      - name: Write .env.local for build (GHA only)
        run: |
          cat > .env.local <<'EOF'
          NEXT_PUBLIC_SUPABASE_URL=http://example.com
          NEXT_PUBLIC_SUPABASE_ANON_KEY=anon
          NEXT_PUBLIC_APP_ORIGIN=http://localhost:3000
          SUPABASE_SERVICE_ROLE=stub_service_role
          SEED_ADMIN_EMAIL=ci-admin@example.test
          SEED_ADMIN_PASSWORD=Passw0rd!ci
          EOF

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start app (background)
        run: |
          npm run start > .next-app.log 2>&1 & echo $! > .next-app.pid

      - name: Resolve BASE_URL
        id: base
        run: |
          if [ -n "${{ inputs.base_url }}" ]; then
            echo "BASE_URL=${{ inputs.base_url }}" >> $GITHUB_OUTPUT
          else
            echo "BASE_URL=${LOCAL_BASE_URL}" >> $GITHUB_OUTPUT
          fi

      - name: Wait for readiness
        run: |
          for i in {1..60}; do
            curl -fsS "${{ steps.base.outputs.BASE_URL }}/api/health" && exit 0
            sleep 2
          done
          echo "App did not become healthy in time"; exit 1

      - name: Seed data (API → script fallback)
        run: |
          curl -fsS -X POST "${{ steps.base.outputs.BASE_URL }}/api/e2e/seed" || npm run seed:e2e || true

      - name: Run Full E2E (Playwright)
        run: npx playwright test --reporter=line,junit

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload Next server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-app.log
          path: .next-app.log
          if-no-files-found: ignore

      - name: Cleanup
        if: always()
        run: |
          if [ -f .next-app.pid ]; then kill $(cat .next-app.pid) || true; fi

