name: Full E2E

on:
  workflow_dispatch: {}
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: full-e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    env:
      # Provide sane defaults so CI doesn’t regress when secrets aren’t set.
      NEXT_PUBLIC_APP_ORIGIN: ${{ secrets.NEXT_PUBLIC_APP_ORIGIN || 'https://app.quickgig.ph' }}
      APP_ORIGIN:             ${{ secrets.APP_ORIGIN || 'https://app.quickgig.ph' }}
      NEXT_PUBLIC_SUPABASE_URL:      ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || '' }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Setup Node (no pnpm cache here to avoid premature pnpm use)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 2) Install pnpm before caching
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # 3) Cache pnpm store
      - name: Determine pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      # 4) Install deps
      - name: Install deps
        run: pnpm install --frozen-lockfile

      # 5) Install Playwright browsers + system deps
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      # 6) Build with required envs
      - name: Build
        run: pnpm build

      # 7) Start app in background and wait until it’s ready
      - name: Start app (background)
        env:
          PORT: 3000
        run: |
          pnpm start &> .next-app.log &
          npx wait-on --timeout 120000 http://localhost:3000

      # 8) Run Full E2E tests; pass BASE_URL & APP_ORIGIN envs
      - name: Run Full E2E
        env:
          BASE_URL: http://localhost:3000
          APP_ORIGIN: ${{ env.APP_ORIGIN }}
          NEXT_PUBLIC_APP_ORIGIN: ${{ env.NEXT_PUBLIC_APP_ORIGIN }}
        run: pnpm exec playwright test

      # 9) Always upload reports for debugging
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn
          retention-days: 7

      - name: Upload server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-server-log
          path: .next-app.log
          if-no-files-found: ignore
          retention-days: 7
