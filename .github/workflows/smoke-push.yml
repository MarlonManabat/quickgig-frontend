name: Smoke (push)

on:
  push:
    branches: [main]

concurrency:
  group: smoke-push
  cancel-in-progress: true

jobs:
  push:
    # Pin to an image compatible with Playwright CLI deps install.
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: node -v && npm -v
      - run: npm run preflight:node
      - name: Verify lock sync
        run: npm run ci:lock
      - name: Install deps
        run: npm run ci:install
      # Deprecated action removed; install via CLI instead.
      - name: Install Playwright browsers & OS deps
        run: npx playwright install --with-deps
      - name: Start dev server
        run: |
          nohup npm run dev >/dev/null 2>&1 &
          echo $! > .pidfile
      - name: Wait for dev server
        run: |
          for i in {1..60}; do
            curl -fsS http://localhost:3000 >/dev/null && exit 0
            sleep 1
          done
          echo "Dev server failed to start" && exit 1
      - name: Run smoke tests (no webServer)
        run: npx playwright test -c playwright.smoke.ts
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_HOST: "http://localhost:3000"
          DISABLE_EXTERNAL_AUTH_REDIRECTS: "1"
          BASE_URL: http://localhost:3000

      # Run audit but don't block artifacts; capture output to logs.
      - name: Check CTA links (capture log)
        run: |
          mkdir -p logs
          node scripts/audit-links.mjs 2>&1 | tee logs/audit-links.log
        continue-on-error: true
      - name: Stop dev server
        if: always()
        run: if [ -f .pidfile ]; then kill $(cat .pidfile) || true; fi

      # Always collect whatever the run produced.
      - name: Collect results
        if: always()
        run: |
          mkdir -p artifacts
          if [ -d test-results ]; then cp -R test-results artifacts/; fi
          if [ -d playwright-report ]; then cp -R playwright-report artifacts/; fi
          if [ -d logs ]; then cp -R logs artifacts/; fi
          if [ -d docs/status ]; then mkdir -p artifacts/docs && cp -R docs/status artifacts/docs/; fi
          if [ -d docs/agreements ]; then mkdir -p artifacts/docs && cp -R docs/agreements artifacts/docs/; fi
          if [ -f agreements-scan.md ]; then mkdir -p artifacts/agreements && cp agreements-scan.md artifacts/agreements/; fi

      - name: Upload CI artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            artifacts/**
          if-no-files-found: warn
