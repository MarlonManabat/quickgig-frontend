name: Release Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DISABLE_STRIPE: '1'
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
      NEXT_PUBLIC_SUPABASE_ANON_KEY: test-anon
    permissions:
      contents: read
      deployments: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps (robust)
        env:
          NPM_CONFIG_FETCH_RETRIES: 6
          NPM_CONFIG_FETCH_RETRY_MINTIMEOUT: 20000
          NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT: 120000
        run: |
          npm config set audit false
          npm config set fund false
          npm config set progress false
          npm config set prefer-offline true
          npm config set cache ~/.npm
          for i in 1 2 3 4; do
            echo "npm ci attempt $i"
            if npm ci --no-audit --no-fund; then
              echo "npm ci succeeded"; break
            fi
            if [ "$i" -eq 4 ]; then
              echo "npm ci failed after $i attempts"; exit 1
            fi
            sleep $((i*20))
          done

      - name: Autofix (eslint/next/react/prettier)
        run: |
          npm run autofix:ci
          # Never push from CI (runner is on detached HEAD). The script should
          # have created 'autofix.patch' if any changes were suggested.

      - name: Upload autofix patch
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autofix.patch
          path: autofix.patch
          if-no-files-found: ignore

      # Best-effort comment with instructions; do not fail the workflow
      - name: Comment autofix patch (non-blocking)
        if: ${{ github.event_name == 'pull_request' }}
        continue-on-error: true
        uses: actions/github-script@v7
        env:
          RUN_ID: ${{ github.run_id }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = process.env.RUN_ID
            const { owner, repo } = context.repo
            const prNumber = context.payload.pull_request?.number
            if (!prNumber) {
              core.info('Not a PR context; skipping comment.')
              return
            }
            // Construct artifact URL
            const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}/artifacts`
            const body = [
              'Auto-fix patch available.',
              '',
              `Download: ${artifactUrl}`,
              '',
              'Apply:',
              '',
              '```bash',
              'git apply autofix.patch',
              '```'
            ].join('\n')
            try {
              await github.rest.issues.createComment({
                owner, repo, issue_number: prNumber, body
              })
            } catch (e) {
              core.warning(`Skipping comment (non-blocking): ${e?.message}`)
            }

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Install Playwright (with system deps)
        run: npx playwright install --with-deps
      - name: Run E2E tests
        env:
          E2E_BASE_URL: http://localhost:3000
          WORKER_EMAIL: ${{ secrets.WORKER_EMAIL }}
          WORKER_PASSWORD: ${{ secrets.WORKER_PASSWORD }}
          EMPLOYER_EMAIL: ${{ secrets.EMPLOYER_EMAIL }}
          EMPLOYER_PASSWORD: ${{ secrets.EMPLOYER_PASSWORD }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: npm run test:release

      # Always upload artifacts
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            test-results/**
            playwright-report/**
            button-audit/**
          if-no-files-found: ignore

      - name: Post PR summary comment (non-blocking)
        if: always()
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            core.summary.addHeading('Release check')
            core.summary.addList([
              'E2E: executed',
              'Autofix: applied if needed'
            ])
            await core.summary.write()
