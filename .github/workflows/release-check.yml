name: Release Check (PR smoke)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DISABLE_STRIPE: '1'
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co' }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'test-anon-key' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - name: Install Supabase CLI
        run: |
          curl -fsSL https://cli.supabase.com/install.sh | sh -s -- -b "$HOME/.supabase"
          echo "$HOME/.supabase/bin" >> "$GITHUB_PATH"
      - name: Link Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref "${{ secrets.SUPABASE_PROJECT_REF }}" --password "${{ secrets.SUPABASE_DB_PASSWORD }}"
      - name: Push DB migrations (PR env)
        if: ${{ github.event_name == 'pull_request' }}
        run: supabase db push --non-interactive --include-roles
      - name: Push DB migrations (main)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: supabase db push --non-interactive --include-roles
      - run: npm run build
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .next/**/*.html
            **/playwright-report/**

  e2e_smoke:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      DISABLE_STRIPE: '1'
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co' }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'test-anon-key' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - name: Install Supabase CLI
        run: |
          curl -fsSL https://cli.supabase.com/install.sh | sh -s -- -b "$HOME/.supabase"
          echo "$HOME/.supabase/bin" >> "$GITHUB_PATH"
      - name: Link Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref "${{ secrets.SUPABASE_PROJECT_REF }}" --password "${{ secrets.SUPABASE_DB_PASSWORD }}"
      - name: Push DB migrations (PR env)
        if: ${{ github.event_name == 'pull_request' }}
        run: supabase db push --non-interactive --include-roles
      - name: Push DB migrations (main)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: supabase db push --non-interactive --include-roles
      - run: npm run build
      - run: npx playwright install --with-deps
      - run: npm run test:smoke
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-smoke
          path: |
            playwright-report/**
            test-results/**
          if-no-files-found: ignore
