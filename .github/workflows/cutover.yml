name: Cutover app.quickgig.ph

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  cutover:
    runs-on: ubuntu-latest
    env:
      APP_DOMAIN: ${{ vars.APP_DOMAIN }}
      VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Check credentials
        run: |
          : "${APP_DOMAIN:?APP_DOMAIN missing}" >/dev/null
          : "${VERCEL_PROJECT_ID:?VERCEL_PROJECT_ID missing}" >/dev/null
          : "${VERCEL_ORG_ID:?VERCEL_ORG_ID missing}" >/dev/null
          : "${VERCEL_TOKEN:?VERCEL_TOKEN missing}" >/dev/null
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y bind9-dnsutils jq
          npm install -g vercel
      - name: Add domain if missing
        run: |
          npx vercel --token "$VERCEL_TOKEN" projects ls >/dev/null 2>&1 || true
          if ! npx vercel domains ls --token "$VERCEL_TOKEN" | grep -q "$APP_DOMAIN"; then
            npx vercel domains add "$APP_DOMAIN" --token "$VERCEL_TOKEN" || echo "::warning::Could not auto-attach domain (missing perms?)."
          fi
          npx vercel domains inspect "$APP_DOMAIN" --token "$VERCEL_TOKEN" || true
      - name: DNS must point to Vercel
        run: |
          set -e
          TARGET="$(dig +short cname $APP_DOMAIN | sed 's/\.$//')"
          if [ -z "$TARGET" ]; then
            echo "::error::CNAME for $APP_DOMAIN not found. Point it to cname.vercel-dns.com"; exit 1
          fi
          if [ "$TARGET" != "cname.vercel-dns.com" ]; then
            echo "::error::CNAME points to $TARGET (expected cname.vercel-dns.com)"; exit 1
          fi
      - name: Runtime verification
        run: |
          HTML=$(curl -fsSL "https://$APP_DOMAIN")
          echo "$HTML" | grep -q "/_next/" || { echo "::error::No Next.js assets found in HTML"; exit 1; }
          curl -I -s "https://$APP_DOMAIN" | grep -qi "x-vercel-id" || { echo "::error::x-vercel-id header missing (not a Vercel edge)"; exit 1; }
          curl -s -o /dev/null -w "%{http_code}" "https://$APP_DOMAIN/api/session/me" | grep -Eq "200|401" || { echo "::error::/api/session/me not reachable"; exit 1; }
      - name: Expose build metadata
        run: |
          echo "NEXT_PUBLIC_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BUILD_TS=$(date +%s)000" >> $GITHUB_ENV
