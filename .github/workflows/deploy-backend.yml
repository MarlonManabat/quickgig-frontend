name: Deploy PHP API to Hostinger (FTP)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'api.quickgig.ph/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env for API
        run: |
          echo "$API_ENV" > api.quickgig.ph/.env
        env:
          API_ENV: ${{ secrets.API_ENV }}

      - name: Try deploy to /domains/.../public_html (primary)
        id: deploy_primary
        continue-on-error: true
        uses: SamKirkland/FTP-Deploy-Action@v4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT || 21 }}
          protocol: ftp
          local-dir: api.quickgig.ph/
          server-dir: /domains/api.quickgig.ph/public_html/
          dangerous-clean-slate: true

      - name: Fallback deploy to /public_html (if primary failed)
        if: steps.deploy_primary.outcome == 'failure'
        uses: SamKirkland/FTP-Deploy-Action@v4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT || 21 }}
          protocol: ftp
          local-dir: api.quickgig.ph/
          server-dir: /public_html/
          dangerous-clean-slate: true

      - name: Verify API endpoints
        run: |
          set -e
          echo "Probing https://api.quickgig.ph ..."
          curl -fsSL https://api.quickgig.ph/ | tee /tmp/root.json
          curl -fsSL https://api.quickgig.ph/health | tee /tmp/health.json
          node -e "
            const fs=require('fs');
            const root=JSON.parse(fs.readFileSync('/tmp/root.json','utf8'));
            const health=JSON.parse(fs.readFileSync('/tmp/health.json','utf8'));
            if (root.status!=='ok') { console.error('Root not ok:', root); process.exit(1); }
            if (health.status!=='ok'||health.db!=='up'){ console.error('Health not ok:', health); process.exit(1); }
            console.log('API verified âœ“');
          "
