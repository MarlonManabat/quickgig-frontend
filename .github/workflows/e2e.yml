name: E2E (manual or nightly)
on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL (leave empty to run local)'
        required: false
  schedule:
    - cron: '0 9 * * *' # optional

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      # used by tests
      BASE_URL: ${{ github.event.inputs.base_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install deps
        run: |
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          npx playwright install --with-deps

      # Seed/Cleanup intentionally skipped in CI; tests donâ€™t require preseeded data.

      - name: Ensure port 3000 is free
        run: |
          if lsof -i :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
            echo "Port 3000 busy. Killing existing process..."
            kill -9 $(lsof -i :3000 -sTCP:LISTEN -t) || true
          fi

      - name: Start server (background, local only)
        if: ${{ env.BASE_URL == '' }}
        run: |
          PORT=3000 npm run build
          PORT=3000 npm start & echo $! > .pidfile

      - name: Wait for app/health or homepage (60s)
        run: |
          URL="${{ env.BASE_URL }}"
          if [ -z "$URL" ]; then URL="http://localhost:3000"; fi
          for i in {1..60}; do
            if curl -fsS "$URL/api/health" >/dev/null 2>&1 || curl -fsS "$URL" >/dev/null 2>&1; then
              echo "UP"; exit 0
            fi
            sleep 1
          done
          echo "App not responding"; exit 1

      - name: Run E2E
        run: |
          URL="${{ env.BASE_URL }}"
          if [ -z "$URL" ]; then URL="http://localhost:3000"; fi
          npx playwright test --reporter=line --project=chromium --grep-invert "@flaky" --config playwright.config.ts --timeout=300000
        env:
          BASE_URL: ${{ env.BASE_URL }}

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      - name: Stop server
        if: always() && env.BASE_URL == ''
        run: |
          if [ -f .pidfile ]; then kill $(cat .pidfile) || true; fi

