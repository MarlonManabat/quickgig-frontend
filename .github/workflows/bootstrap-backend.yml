# HOSTINGER_SSH_KEY must be the private key (not .pub, not password).
# If you prefer, set HOSTINGER_SSH_KEY_B64 with a base64-encoded private key.

name: Bootstrap backend (deploy + install + seed)

on:
  workflow_dispatch:

jobs:
  bootstrap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y jq rsync lftp

      - name: Setup SSH
        shell: bash
        env:
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PORT: ${{ secrets.HOSTINGER_PORT }}
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_SSH_KEY: ${{ secrets.HOSTINGER_SSH_KEY }}
          HOSTINGER_SSH_KEY_B64: ${{ secrets.HOSTINGER_SSH_KEY_B64 }}
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          if [[ -n "${HOSTINGER_SSH_KEY_B64:-}" ]]; then
            echo "$HOSTINGER_SSH_KEY_B64" | base64 -d > ~/.ssh/hostinger
          else
            if [[ -z "${HOSTINGER_SSH_KEY:-}" ]]; then
              echo "Missing HOSTINGER_SSH_KEY or HOSTINGER_SSH_KEY_B64 secret" >&2
              exit 1
            fi
            cat > ~/.ssh/hostinger <<'EOF'
${{ secrets.HOSTINGER_SSH_KEY }}
EOF
          fi
          chmod 600 ~/.ssh/hostinger

          ssh-keyscan -p "$HOSTINGER_PORT" "$HOSTINGER_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          # Verbose probe; if this fails we want 255 with details
          ssh -vvv -i ~/.ssh/hostinger -p "$HOSTINGER_PORT" \
            "$HOSTINGER_USER@$HOSTINGER_HOST" "echo ok"

      - name: Deploy API via rsync
        shell: bash
        env:
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PORT: ${{ secrets.HOSTINGER_PORT }}
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_REMOTE_DIR: ${{ secrets.HOSTINGER_REMOTE_DIR }}
        run: |
          set -euxo pipefail
          rsync -az --delete \
            -e "ssh -i ~/.ssh/hostinger -p ${HOSTINGER_PORT}" \
            api.quickgig.ph/ "${HOSTINGER_USER}@${HOSTINGER_HOST}:${HOSTINGER_REMOTE_DIR}/"

      - name: Install & seed backend
        shell: bash
        run: |
          set -euxo pipefail
          # Health
          curl -sS https://api.quickgig.ph/status | jq

          # Run installer (idempotent; allow non-200 to not fail the job hard)
          curl -sS "https://api.quickgig.ph/tools/install.php?token=RUN_ONCE" || true

          # Verify events endpoint responds (if present)
          curl -sS https://api.quickgig.ph/events/index.php | head -n 20 || true

